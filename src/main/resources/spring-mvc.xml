<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
     http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing
        infrastructure -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- set the max upload size100MB -->
        <property name="maxUploadSize">
            <value>104857600</value>
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>

    <aop:aspectj-autoproxy/>
    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <!-- @Controller, @Service, @Configuration, etc. -->
    <context:component-scan
            base-package="com.amir.service,com.amir.controller,com.amir.mapper,com.amir.interceptor,com.amir.excel,com.amir.factory">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- json Docs start -->
    <bean class="com.mangofactory.swagger.configuration.SpringSwaggerConfig"/>
    <bean class="com.amir.swagger.XaSwaggerConfig"/>
    <!-- Direct static mappings -->
    <mvc:resources mapping="*.html" location="/"/>
    <!-- json Docs end -->

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    </bean>

    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>

    <mvc:annotation-driven validator="validator" conversion-service="conversionService">
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <property name="failOnEmptyBeans" value="false"/>
                        <property name="featuresToEnable">
                            <array>
                                <!-- 将枚举都序列化成index -->
                                <util:constant
                                        static-field="com.fasterxml.jackson.databind.SerializationFeature.WRITE_ENUMS_USING_INDEX"/>
                            </array>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
        <mvc:argument-resolvers>
            <!-- 解决pageable对象 数据装配的问题 -->
            <bean class="org.springframework.data.web.PageableHandlerMethodArgumentResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.amir.converter.StringToEnumConverterFactory"/>
            </set>
        </property>
    </bean>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="*"/>
            <bean class="org.springframework.web.servlet.mvc.WebContentInterceptor">
                <property name="cacheSeconds" value="0"/>
                <property name="useExpiresHeader" value="true"/>
                <property name="useCacheControlHeader" value="true"/>
                <property name="useCacheControlNoStore" value="true"/>
            </bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/system/data"/>
            <mvc:exclude-mapping path="/user/login"/>
            <mvc:exclude-mapping path="/download/**"/>
            <mvc:exclude-mapping path="/backDoor/**"/>
            <mvc:exclude-mapping path="/wx/**"/>
            <bean class="com.amir.interceptor.LoginInterceptor">
            </bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/wx/**"/>
            <mvc:exclude-mapping path="/wx/login"/>
            <mvc:exclude-mapping path="/wx/checkPhoneAndIdCar"/>
            <mvc:exclude-mapping path="/wx/resetPassWord"/>
            <mvc:exclude-mapping path="/wx/work/getUrl"/>
            <bean class="com.amir.interceptor.WxLoginInterceptor">
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler/>

    <!-- 定义JSP文件的位置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/page/"/>
        <property name="suffix" value=""/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    </bean>

    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.validation.BindException">error/400</prop>
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
            </props>
        </property>
    </bean>
    <!-- end -->

    <bean id="appProperty"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <array>
                <value>classpath*:/db-pool.properties</value>
                <value>classpath*:/jdbc.properties</value>
            </array>
        </property>
    </bean>
    <mvc:resources mapping="/download/**" location="/template/"/>
</beans>
package com.amir.model.salary;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SalaryMonthlyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    public SalaryMonthlyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andYearMonthIsNull() {
            addCriterion("yearMonth is null");
            return (Criteria) this;
        }

        public Criteria andYearMonthIsNotNull() {
            addCriterion("yearMonth is not null");
            return (Criteria) this;
        }

        public Criteria andYearMonthEqualTo(String value) {
            addCriterion("yearMonth =", value, "yearMonth");
            return (Criteria) this;
        }

        public Criteria andYearMonthNotEqualTo(String value) {
            addCriterion("yearMonth <>", value, "yearMonth");
            return (Criteria) this;
        }

        public Criteria andYearMonthGreaterThan(String value) {
            addCriterion("yearMonth >", value, "yearMonth");
            return (Criteria) this;
        }

        public Criteria andYearMonthGreaterThanOrEqualTo(String value) {
            addCriterion("yearMonth >=", value, "yearMonth");
            return (Criteria) this;
        }

        public Criteria andYearMonthLessThan(String value) {
            addCriterion("yearMonth <", value, "yearMonth");
            return (Criteria) this;
        }

        public Criteria andYearMonthLessThanOrEqualTo(String value) {
            addCriterion("yearMonth <=", value, "yearMonth");
            return (Criteria) this;
        }

        public Criteria andYearMonthLike(String value) {
            addCriterion("yearMonth like", value, "yearMonth");
            return (Criteria) this;
        }

        public Criteria andYearMonthNotLike(String value) {
            addCriterion("yearMonth not like", value, "yearMonth");
            return (Criteria) this;
        }

        public Criteria andYearMonthIn(List<String> values) {
            addCriterion("yearMonth in", values, "yearMonth");
            return (Criteria) this;
        }

        public Criteria andYearMonthNotIn(List<String> values) {
            addCriterion("yearMonth not in", values, "yearMonth");
            return (Criteria) this;
        }

        public Criteria andYearMonthBetween(String value1, String value2) {
            addCriterion("yearMonth between", value1, value2, "yearMonth");
            return (Criteria) this;
        }

        public Criteria andYearMonthNotBetween(String value1, String value2) {
            addCriterion("yearMonth not between", value1, value2, "yearMonth");
            return (Criteria) this;
        }

        public Criteria andExpectWorkDayIsNull() {
            addCriterion("expectWorkDay is null");
            return (Criteria) this;
        }

        public Criteria andExpectWorkDayIsNotNull() {
            addCriterion("expectWorkDay is not null");
            return (Criteria) this;
        }

        public Criteria andExpectWorkDayEqualTo(Integer value) {
            addCriterion("expectWorkDay =", value, "expectWorkDay");
            return (Criteria) this;
        }

        public Criteria andExpectWorkDayNotEqualTo(Integer value) {
            addCriterion("expectWorkDay <>", value, "expectWorkDay");
            return (Criteria) this;
        }

        public Criteria andExpectWorkDayGreaterThan(Integer value) {
            addCriterion("expectWorkDay >", value, "expectWorkDay");
            return (Criteria) this;
        }

        public Criteria andExpectWorkDayGreaterThanOrEqualTo(Integer value) {
            addCriterion("expectWorkDay >=", value, "expectWorkDay");
            return (Criteria) this;
        }

        public Criteria andExpectWorkDayLessThan(Integer value) {
            addCriterion("expectWorkDay <", value, "expectWorkDay");
            return (Criteria) this;
        }

        public Criteria andExpectWorkDayLessThanOrEqualTo(Integer value) {
            addCriterion("expectWorkDay <=", value, "expectWorkDay");
            return (Criteria) this;
        }

        public Criteria andExpectWorkDayIn(List<Integer> values) {
            addCriterion("expectWorkDay in", values, "expectWorkDay");
            return (Criteria) this;
        }

        public Criteria andExpectWorkDayNotIn(List<Integer> values) {
            addCriterion("expectWorkDay not in", values, "expectWorkDay");
            return (Criteria) this;
        }

        public Criteria andExpectWorkDayBetween(Integer value1, Integer value2) {
            addCriterion("expectWorkDay between", value1, value2, "expectWorkDay");
            return (Criteria) this;
        }

        public Criteria andExpectWorkDayNotBetween(Integer value1, Integer value2) {
            addCriterion("expectWorkDay not between", value1, value2, "expectWorkDay");
            return (Criteria) this;
        }

        public Criteria andRealityWorkDayIsNull() {
            addCriterion("realityWorkDay is null");
            return (Criteria) this;
        }

        public Criteria andRealityWorkDayIsNotNull() {
            addCriterion("realityWorkDay is not null");
            return (Criteria) this;
        }

        public Criteria andRealityWorkDayEqualTo(Integer value) {
            addCriterion("realityWorkDay =", value, "realityWorkDay");
            return (Criteria) this;
        }

        public Criteria andRealityWorkDayNotEqualTo(Integer value) {
            addCriterion("realityWorkDay <>", value, "realityWorkDay");
            return (Criteria) this;
        }

        public Criteria andRealityWorkDayGreaterThan(Integer value) {
            addCriterion("realityWorkDay >", value, "realityWorkDay");
            return (Criteria) this;
        }

        public Criteria andRealityWorkDayGreaterThanOrEqualTo(Integer value) {
            addCriterion("realityWorkDay >=", value, "realityWorkDay");
            return (Criteria) this;
        }

        public Criteria andRealityWorkDayLessThan(Integer value) {
            addCriterion("realityWorkDay <", value, "realityWorkDay");
            return (Criteria) this;
        }

        public Criteria andRealityWorkDayLessThanOrEqualTo(Integer value) {
            addCriterion("realityWorkDay <=", value, "realityWorkDay");
            return (Criteria) this;
        }

        public Criteria andRealityWorkDayIn(List<Integer> values) {
            addCriterion("realityWorkDay in", values, "realityWorkDay");
            return (Criteria) this;
        }

        public Criteria andRealityWorkDayNotIn(List<Integer> values) {
            addCriterion("realityWorkDay not in", values, "realityWorkDay");
            return (Criteria) this;
        }

        public Criteria andRealityWorkDayBetween(Integer value1, Integer value2) {
            addCriterion("realityWorkDay between", value1, value2, "realityWorkDay");
            return (Criteria) this;
        }

        public Criteria andRealityWorkDayNotBetween(Integer value1, Integer value2) {
            addCriterion("realityWorkDay not between", value1, value2, "realityWorkDay");
            return (Criteria) this;
        }

        public Criteria andBasicSalaryIsNull() {
            addCriterion("basicSalary is null");
            return (Criteria) this;
        }

        public Criteria andBasicSalaryIsNotNull() {
            addCriterion("basicSalary is not null");
            return (Criteria) this;
        }

        public Criteria andBasicSalaryEqualTo(BigDecimal value) {
            addCriterion("basicSalary =", value, "basicSalary");
            return (Criteria) this;
        }

        public Criteria andBasicSalaryNotEqualTo(BigDecimal value) {
            addCriterion("basicSalary <>", value, "basicSalary");
            return (Criteria) this;
        }

        public Criteria andBasicSalaryGreaterThan(BigDecimal value) {
            addCriterion("basicSalary >", value, "basicSalary");
            return (Criteria) this;
        }

        public Criteria andBasicSalaryGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("basicSalary >=", value, "basicSalary");
            return (Criteria) this;
        }

        public Criteria andBasicSalaryLessThan(BigDecimal value) {
            addCriterion("basicSalary <", value, "basicSalary");
            return (Criteria) this;
        }

        public Criteria andBasicSalaryLessThanOrEqualTo(BigDecimal value) {
            addCriterion("basicSalary <=", value, "basicSalary");
            return (Criteria) this;
        }

        public Criteria andBasicSalaryIn(List<BigDecimal> values) {
            addCriterion("basicSalary in", values, "basicSalary");
            return (Criteria) this;
        }

        public Criteria andBasicSalaryNotIn(List<BigDecimal> values) {
            addCriterion("basicSalary not in", values, "basicSalary");
            return (Criteria) this;
        }

        public Criteria andBasicSalaryBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("basicSalary between", value1, value2, "basicSalary");
            return (Criteria) this;
        }

        public Criteria andBasicSalaryNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("basicSalary not between", value1, value2, "basicSalary");
            return (Criteria) this;
        }

        public Criteria andHourlyWageIsNull() {
            addCriterion("hourlyWage is null");
            return (Criteria) this;
        }

        public Criteria andHourlyWageIsNotNull() {
            addCriterion("hourlyWage is not null");
            return (Criteria) this;
        }

        public Criteria andHourlyWageEqualTo(BigDecimal value) {
            addCriterion("hourlyWage =", value, "hourlyWage");
            return (Criteria) this;
        }

        public Criteria andHourlyWageNotEqualTo(BigDecimal value) {
            addCriterion("hourlyWage <>", value, "hourlyWage");
            return (Criteria) this;
        }

        public Criteria andHourlyWageGreaterThan(BigDecimal value) {
            addCriterion("hourlyWage >", value, "hourlyWage");
            return (Criteria) this;
        }

        public Criteria andHourlyWageGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("hourlyWage >=", value, "hourlyWage");
            return (Criteria) this;
        }

        public Criteria andHourlyWageLessThan(BigDecimal value) {
            addCriterion("hourlyWage <", value, "hourlyWage");
            return (Criteria) this;
        }

        public Criteria andHourlyWageLessThanOrEqualTo(BigDecimal value) {
            addCriterion("hourlyWage <=", value, "hourlyWage");
            return (Criteria) this;
        }

        public Criteria andHourlyWageIn(List<BigDecimal> values) {
            addCriterion("hourlyWage in", values, "hourlyWage");
            return (Criteria) this;
        }

        public Criteria andHourlyWageNotIn(List<BigDecimal> values) {
            addCriterion("hourlyWage not in", values, "hourlyWage");
            return (Criteria) this;
        }

        public Criteria andHourlyWageBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("hourlyWage between", value1, value2, "hourlyWage");
            return (Criteria) this;
        }

        public Criteria andHourlyWageNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("hourlyWage not between", value1, value2, "hourlyWage");
            return (Criteria) this;
        }

        public Criteria andIsMoreIsNull() {
            addCriterion("isMore is null");
            return (Criteria) this;
        }

        public Criteria andIsMoreIsNotNull() {
            addCriterion("isMore is not null");
            return (Criteria) this;
        }

        public Criteria andIsMoreEqualTo(Integer value) {
            addCriterion("isMore =", value, "isMore");
            return (Criteria) this;
        }

        public Criteria andIsMoreNotEqualTo(Integer value) {
            addCriterion("isMore <>", value, "isMore");
            return (Criteria) this;
        }

        public Criteria andIsMoreGreaterThan(Integer value) {
            addCriterion("isMore >", value, "isMore");
            return (Criteria) this;
        }

        public Criteria andIsMoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("isMore >=", value, "isMore");
            return (Criteria) this;
        }

        public Criteria andIsMoreLessThan(Integer value) {
            addCriterion("isMore <", value, "isMore");
            return (Criteria) this;
        }

        public Criteria andIsMoreLessThanOrEqualTo(Integer value) {
            addCriterion("isMore <=", value, "isMore");
            return (Criteria) this;
        }

        public Criteria andIsMoreIn(List<Integer> values) {
            addCriterion("isMore in", values, "isMore");
            return (Criteria) this;
        }

        public Criteria andIsMoreNotIn(List<Integer> values) {
            addCriterion("isMore not in", values, "isMore");
            return (Criteria) this;
        }

        public Criteria andIsMoreBetween(Integer value1, Integer value2) {
            addCriterion("isMore between", value1, value2, "isMore");
            return (Criteria) this;
        }

        public Criteria andIsMoreNotBetween(Integer value1, Integer value2) {
            addCriterion("isMore not between", value1, value2, "isMore");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("createTime =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("createTime <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("createTime >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createTime >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("createTime <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("createTime <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("createTime in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("createTime not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("createTime between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("createTime not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andLastModifyTimeIsNull() {
            addCriterion("lastModifyTime is null");
            return (Criteria) this;
        }

        public Criteria andLastModifyTimeIsNotNull() {
            addCriterion("lastModifyTime is not null");
            return (Criteria) this;
        }

        public Criteria andLastModifyTimeEqualTo(Date value) {
            addCriterion("lastModifyTime =", value, "lastModifyTime");
            return (Criteria) this;
        }

        public Criteria andLastModifyTimeNotEqualTo(Date value) {
            addCriterion("lastModifyTime <>", value, "lastModifyTime");
            return (Criteria) this;
        }

        public Criteria andLastModifyTimeGreaterThan(Date value) {
            addCriterion("lastModifyTime >", value, "lastModifyTime");
            return (Criteria) this;
        }

        public Criteria andLastModifyTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("lastModifyTime >=", value, "lastModifyTime");
            return (Criteria) this;
        }

        public Criteria andLastModifyTimeLessThan(Date value) {
            addCriterion("lastModifyTime <", value, "lastModifyTime");
            return (Criteria) this;
        }

        public Criteria andLastModifyTimeLessThanOrEqualTo(Date value) {
            addCriterion("lastModifyTime <=", value, "lastModifyTime");
            return (Criteria) this;
        }

        public Criteria andLastModifyTimeIn(List<Date> values) {
            addCriterion("lastModifyTime in", values, "lastModifyTime");
            return (Criteria) this;
        }

        public Criteria andLastModifyTimeNotIn(List<Date> values) {
            addCriterion("lastModifyTime not in", values, "lastModifyTime");
            return (Criteria) this;
        }

        public Criteria andLastModifyTimeBetween(Date value1, Date value2) {
            addCriterion("lastModifyTime between", value1, value2, "lastModifyTime");
            return (Criteria) this;
        }

        public Criteria andLastModifyTimeNotBetween(Date value1, Date value2) {
            addCriterion("lastModifyTime not between", value1, value2, "lastModifyTime");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNull() {
            addCriterion("isDelete is null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNotNull() {
            addCriterion("isDelete is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteEqualTo(Integer value) {
            addCriterion("isDelete =", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotEqualTo(Integer value) {
            addCriterion("isDelete <>", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThan(Integer value) {
            addCriterion("isDelete >", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThanOrEqualTo(Integer value) {
            addCriterion("isDelete >=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThan(Integer value) {
            addCriterion("isDelete <", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThanOrEqualTo(Integer value) {
            addCriterion("isDelete <=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIn(List<Integer> values) {
            addCriterion("isDelete in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotIn(List<Integer> values) {
            addCriterion("isDelete not in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteBetween(Integer value1, Integer value2) {
            addCriterion("isDelete between", value1, value2, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotBetween(Integer value1, Integer value2) {
            addCriterion("isDelete not between", value1, value2, "isDelete");
            return (Criteria) this;
        }

        public Criteria andTwoSideRateIsNull() {
            addCriterion("twoSideRate is null");
            return (Criteria) this;
        }

        public Criteria andTwoSideRateIsNotNull() {
            addCriterion("twoSideRate is not null");
            return (Criteria) this;
        }

        public Criteria andTwoSideRateEqualTo(BigDecimal value) {
            addCriterion("twoSideRate =", value, "twoSideRate");
            return (Criteria) this;
        }

        public Criteria andTwoSideRateNotEqualTo(BigDecimal value) {
            addCriterion("twoSideRate <>", value, "twoSideRate");
            return (Criteria) this;
        }

        public Criteria andTwoSideRateGreaterThan(BigDecimal value) {
            addCriterion("twoSideRate >", value, "twoSideRate");
            return (Criteria) this;
        }

        public Criteria andTwoSideRateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("twoSideRate >=", value, "twoSideRate");
            return (Criteria) this;
        }

        public Criteria andTwoSideRateLessThan(BigDecimal value) {
            addCriterion("twoSideRate <", value, "twoSideRate");
            return (Criteria) this;
        }

        public Criteria andTwoSideRateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("twoSideRate <=", value, "twoSideRate");
            return (Criteria) this;
        }

        public Criteria andTwoSideRateIn(List<BigDecimal> values) {
            addCriterion("twoSideRate in", values, "twoSideRate");
            return (Criteria) this;
        }

        public Criteria andTwoSideRateNotIn(List<BigDecimal> values) {
            addCriterion("twoSideRate not in", values, "twoSideRate");
            return (Criteria) this;
        }

        public Criteria andTwoSideRateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("twoSideRate between", value1, value2, "twoSideRate");
            return (Criteria) this;
        }

        public Criteria andTwoSideRateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("twoSideRate not between", value1, value2, "twoSideRate");
            return (Criteria) this;
        }

        public Criteria andAssistRateIsNull() {
            addCriterion("assistRate is null");
            return (Criteria) this;
        }

        public Criteria andAssistRateIsNotNull() {
            addCriterion("assistRate is not null");
            return (Criteria) this;
        }

        public Criteria andAssistRateEqualTo(BigDecimal value) {
            addCriterion("assistRate =", value, "assistRate");
            return (Criteria) this;
        }

        public Criteria andAssistRateNotEqualTo(BigDecimal value) {
            addCriterion("assistRate <>", value, "assistRate");
            return (Criteria) this;
        }

        public Criteria andAssistRateGreaterThan(BigDecimal value) {
            addCriterion("assistRate >", value, "assistRate");
            return (Criteria) this;
        }

        public Criteria andAssistRateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("assistRate >=", value, "assistRate");
            return (Criteria) this;
        }

        public Criteria andAssistRateLessThan(BigDecimal value) {
            addCriterion("assistRate <", value, "assistRate");
            return (Criteria) this;
        }

        public Criteria andAssistRateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("assistRate <=", value, "assistRate");
            return (Criteria) this;
        }

        public Criteria andAssistRateIn(List<BigDecimal> values) {
            addCriterion("assistRate in", values, "assistRate");
            return (Criteria) this;
        }

        public Criteria andAssistRateNotIn(List<BigDecimal> values) {
            addCriterion("assistRate not in", values, "assistRate");
            return (Criteria) this;
        }

        public Criteria andAssistRateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("assistRate between", value1, value2, "assistRate");
            return (Criteria) this;
        }

        public Criteria andAssistRateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("assistRate not between", value1, value2, "assistRate");
            return (Criteria) this;
        }

        public Criteria andYearMonthLikeInsensitive(String value) {
            addCriterion("upper(yearMonth) like", value.toUpperCase(), "yearMonth");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_Salary_Monthly
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }
    }
}